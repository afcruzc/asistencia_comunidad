{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afcru\\\\Downloads\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LayoutHeader from './components/LayoutHeader';\nimport GroupView from './components/GroupView';\nimport PersonView from './components/PersonView';\nimport AddEditGroupModal from './components/AddEditGroupModal';\nimport AddEditPersonModal from './components/AddEditPersonModal';\nimport GroupDetailView from './components/GroupDetailView';\nimport MeetingsView from './components/MeetingsView';\nimport AddMeetingModal from './components/AddMeetingModal';\nimport MeetingDetailView from './components/MeetingDetailView';\nimport PersonDashboardView from './components/PersonDashboardView';\nimport RegisterAttendanceView from './components/RegisterAttendanceView';\nimport DeletedPeopleHistoryView from './components/DeletedPeopleHistoryView';\nimport AdminView from './components/AdminView';\nimport AdminLoginModal from './components/AdminLoginModal';\nimport HamburgerMenu from './components/HamburgerMenu';\nimport LeaderLoginModal from './components/LeaderLoginModal';\nimport { leaderLogin, leaderLogout, isLeaderLoggedIn, getLeaderData, getGroups, getPersons, getMeetings, createGroup, createPerson, createMeeting, updateGroup, updatePerson, updateMeeting, deleteGroup, deletePerson, deleteMeeting } from './utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('groups');\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [selectedMeeting, setSelectedMeeting] = useState(null);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [showGroupModal, setShowGroupModal] = useState(false);\n  const [groupToEdit, setGroupToEdit] = useState(null);\n  const [showPersonModal, setShowPersonModal] = useState(false);\n  const [personToEdit, setPersonToEdit] = useState(null);\n  const [showAddMeetingModal, setShowAddMeetingModal] = useState(false);\n  const [showAdminLoginModal, setShowAdminLoginModal] = useState(false);\n  const [isAdminAuthenticated, setIsAdminAuthenticated] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [showLeaderLoginModal, setShowLeaderLoginModal] = useState(false);\n  const [currentLeader, setCurrentLeader] = useState(null);\n  const [isLeaderAuthenticated, setIsLeaderAuthenticated] = useState(false);\n\n  // Datos principales\n  const [people, setPeople] = useState([]);\n  const [meetings, setMeetings] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [deletedPeople, setDeletedPeople] = useState([]); // Se puede guardar en backend o mantener local\n\n  // Verificar autenticación al cargar\n  useEffect(() => {\n    if (isLeaderLoggedIn()) {\n      const leaderData = getLeaderData();\n      setCurrentLeader(leaderData);\n      setIsLeaderAuthenticated(true);\n    }\n  }, []);\n\n  // Cargar datos al iniciar\n  useEffect(() => {\n    async function fetchData() {\n      const [peopleData, meetingsData, groupsData] = await Promise.all([getPersons(), getMeetings(), getGroups()]);\n      setPeople(peopleData);\n      setMeetings(meetingsData);\n      setGroups(groupsData);\n    }\n    fetchData();\n  }, []);\n  const handleSelectGroup = group => {\n    setSelectedGroup(group);\n    setCurrentPage('groupDetail');\n  };\n  const handleSelectPerson = person => {\n    setSelectedPerson(person);\n    setCurrentPage('personDashboard');\n  };\n  const handleSelectMeeting = meeting => {\n    setSelectedMeeting(meeting);\n    setCurrentPage('meetingDetail');\n  };\n  const handleBack = () => {\n    if (currentPage === 'groupDetail') {\n      setCurrentPage('groups');\n      setSelectedGroup(null);\n    } else if (currentPage === 'meetingDetail') {\n      setCurrentPage('meetings');\n      setSelectedMeeting(null);\n    } else if (currentPage === 'personDashboard') {\n      setCurrentPage('people');\n      setSelectedPerson(null);\n    } else if (currentPage === 'registerAttendance') {\n      setCurrentPage('meetings');\n    } else if (currentPage === 'deletedHistory') {\n      setCurrentPage('people');\n    } else if (currentPage === 'admin') {\n      setCurrentPage('groups');\n      setIsAdminAuthenticated(false);\n    } else if (currentPage === 'adminLogin') {\n      setCurrentPage('groups');\n      setShowAdminLoginModal(false);\n    }\n  };\n\n  // CRUD Personas\n  const handleSavePerson = async personData => {\n    if (personData._id) {\n      const updated = await updatePerson(personData._id, personData);\n      setPeople(people.map(p => p._id === updated._id ? updated : p));\n    } else {\n      const created = await createPerson(personData);\n      setPeople([...people, created]);\n    }\n  };\n  const handleDeletePerson = async personId => {\n    await deletePerson(personId);\n    setPeople(people.filter(p => p._id !== personId));\n  };\n\n  // CRUD Grupos\n  const handleSaveGroup = async groupData => {\n    if (groupData._id) {\n      const updated = await updateGroup(groupData._id, groupData);\n      setGroups(groups.map(g => g._id === updated._id ? updated : g));\n    } else {\n      const created = await createGroup(groupData);\n      setGroups([...groups, created]);\n    }\n  };\n  const handleDeleteGroup = async groupId => {\n    await deleteGroup(groupId);\n    setGroups(groups.filter(g => g._id !== groupId));\n  };\n\n  // CRUD Reuniones\n  const handleAddMeeting = async meetingData => {\n    const created = await createMeeting(meetingData);\n    setMeetings([...meetings, created]);\n  };\n  const handleDeleteMeeting = async meetingId => {\n    await deleteMeeting(meetingId);\n    setMeetings(meetings.filter(m => m._id !== meetingId));\n  };\n\n  // CRUD Asistencias (puedes expandir según tu lógica)\n  // ...\n\n  const handleEditPerson = person => {\n    setPersonToEdit(person);\n    setShowPersonModal(true);\n  };\n  const handlePersonStatusChange = (personId, newStatus) => {\n    setPeople(people.map(p => p._id === personId ? {\n      ...p,\n      status: newStatus\n    } : p));\n  };\n  const handleMeetingAttendanceChange = (meetingId, personId, newStatus, excuse = '') => {\n    setMeetings(meetings.map(meeting => {\n      if (meeting._id === meetingId) {\n        const updatedAttendance = meeting.attendance.map(att => att.personId === personId ? {\n          ...att,\n          status: newStatus,\n          excuse: newStatus === 'Excusa' ? excuse : ''\n        } : att);\n        if (!updatedAttendance.some(att => att.personId === personId)) {\n          updatedAttendance.push({\n            personId: personId,\n            status: newStatus,\n            excuse: newStatus === 'Excusa' ? excuse : ''\n          });\n        }\n        return {\n          ...meeting,\n          attendance: updatedAttendance\n        };\n      }\n      return meeting;\n    }));\n  };\n  const handleUpdateMeetingAttendance = (meetingId, newAttendanceRecords) => {\n    setMeetings(meetings.map(meeting => {\n      if (meeting._id === meetingId) {\n        return {\n          ...meeting,\n          attendance: newAttendanceRecords\n        };\n      }\n      return meeting;\n    }));\n  };\n  const handleClearAllData = () => {\n    if (window.confirm('¡Cuidado! ¿Estás seguro de que quieres borrar TODOS los datos (personas, reuniones, historial)? Esta acción es irreversible.')) {\n      setPeople([]);\n      setMeetings([]);\n      setDeletedPeople([]);\n      localStorage.removeItem('attendancePeople');\n      localStorage.removeItem('attendanceMeetings');\n      localStorage.removeItem('deletedPeopleHistory');\n      alert('¡Todos los datos han sido borrados! La aplicación se reiniciará.');\n      window.location.reload();\n    }\n  };\n  const handleAdminLogin = (username, password) => {\n    if (username === 'andresc' && password === 'andresc') {\n      setIsAdminAuthenticated(true);\n      setCurrentPage('admin');\n      return true;\n    }\n    return false;\n  };\n\n  // Autenticación de líder\n  const handleLeaderLogin = async (email, password) => {\n    try {\n      const response = await leaderLogin(email, password);\n      setCurrentLeader(response.leader);\n      setIsLeaderAuthenticated(true);\n      setShowLeaderLoginModal(false);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const handleLeaderLogout = () => {\n    leaderLogout();\n    setCurrentLeader(null);\n    setIsLeaderAuthenticated(false);\n    setCurrentPage('groups');\n  };\n  const getTitle = () => {\n    if (currentPage === 'groups') return 'Grupos';\n    if (currentPage === 'people') return 'Personas';\n    if (currentPage === 'meetings') return 'Reuniones';\n    if (currentPage === 'groupDetail') return (selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.name) || 'Detalle del Grupo';\n    if (currentPage === 'personDashboard') return (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.name) || 'Dashboard de Persona';\n    if (currentPage === 'meetingDetail') return (selectedMeeting === null || selectedMeeting === void 0 ? void 0 : selectedMeeting.name) || 'Detalle de Reunión';\n    if (currentPage === 'registerAttendance') return 'Registrar Asistencia';\n    if (currentPage === 'deletedHistory') return 'Historial de Eliminados';\n    if (currentPage === 'admin') return 'Panel de Administración';\n    return 'Asistencias';\n  };\n  const showBackButton = currentPage !== 'groups' && currentPage !== 'people' && currentPage !== 'meetings' && currentPage !== 'registerAttendance' && currentPage !== 'deletedHistory' && currentPage !== 'admin' && currentPage !== 'adminLogin';\n  const renderContent = () => {\n    if (!isLeaderAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center bg-gray-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold text-gray-800 mb-4\",\n            children: \"Sistema de Asistencias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-8\",\n            children: \"Inicia sesi\\xF3n como l\\xEDder para continuar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowLeaderLoginModal(true),\n            className: \"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors\",\n            children: \"Iniciar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Mostrar todas las vistas y botones para líderes\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [currentPage === 'groups' && /*#__PURE__*/_jsxDEV(GroupView, {\n        groups: groups,\n        onSelectGroup: handleSelectGroup,\n        onAddGroup: () => setShowGroupModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), currentPage === 'people' && /*#__PURE__*/_jsxDEV(PersonView, {\n        people: people,\n        onAddPerson: () => setShowPersonModal(true),\n        onSelectPerson: handleSelectPerson,\n        onEditPerson: handleEditPerson,\n        onDeletePerson: handleDeletePerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), currentPage === 'meetings' && /*#__PURE__*/_jsxDEV(MeetingsView, {\n        meetings: meetings,\n        onSelectMeeting: handleSelectMeeting,\n        onAddMeeting: () => setShowAddMeetingModal(true),\n        onDeleteMeeting: handleDeleteMeeting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), currentPage === 'registerAttendance' && /*#__PURE__*/_jsxDEV(RegisterAttendanceView, {\n        meetings: meetings,\n        people: people,\n        onUpdateMeetingAttendance: handleUpdateMeetingAttendance,\n        onBack: handleBack,\n        groups: groups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), currentPage === 'deletedHistory' && /*#__PURE__*/_jsxDEV(DeletedPeopleHistoryView, {\n        deletedPeople: deletedPeople,\n        groups: groups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), currentPage === 'groupDetail' && selectedGroup && /*#__PURE__*/_jsxDEV(GroupDetailView, {\n        group: selectedGroup,\n        people: people,\n        meetings: meetings,\n        onStatusChange: handlePersonStatusChange,\n        onAddPerson: () => setShowPersonModal(true),\n        onSelectPerson: handleSelectPerson,\n        onEditPerson: handleEditPerson,\n        onDeletePerson: handleDeletePerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), currentPage === 'personDashboard' && selectedPerson && /*#__PURE__*/_jsxDEV(PersonDashboardView, {\n        person: selectedPerson,\n        meetings: meetings,\n        groups: groups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), currentPage === 'meetingDetail' && selectedMeeting && /*#__PURE__*/_jsxDEV(MeetingDetailView, {\n        meeting: selectedMeeting,\n        people: people,\n        groups: groups,\n        onStatusChange: handleMeetingAttendanceChange,\n        onEditPerson: handleEditPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [isLeaderAuthenticated && /*#__PURE__*/_jsxDEV(LayoutHeader, {\n      title: getTitle(),\n      onBack: handleBack,\n      showBack: currentPage !== 'groups' && currentPage !== 'people' && currentPage !== 'meetings',\n      onMenuToggle: () => setIsMenuOpen(!isMenuOpen),\n      currentLeader: currentLeader,\n      onLeaderLogout: handleLeaderLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [isLeaderAuthenticated && /*#__PURE__*/_jsxDEV(HamburgerMenu, {\n        isOpen: isMenuOpen,\n        onClose: () => setIsMenuOpen(false),\n        onNavigate: setCurrentPage,\n        currentPage: currentPage,\n        isLeaderAuthenticated: isLeaderAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 p-6\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), showGroupModal && /*#__PURE__*/_jsxDEV(AddEditGroupModal, {\n      onClose: () => setShowGroupModal(false),\n      onSave: handleSaveGroup,\n      groupToEdit: groupToEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this), showPersonModal && /*#__PURE__*/_jsxDEV(AddEditPersonModal, {\n      onClose: () => setShowPersonModal(false),\n      onSave: handleSavePerson,\n      personToEdit: personToEdit,\n      groups: groups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), showAddMeetingModal && /*#__PURE__*/_jsxDEV(AddMeetingModal, {\n      onClose: () => setShowAddMeetingModal(false),\n      onSave: handleAddMeeting,\n      groups: groups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this), showAdminLoginModal && /*#__PURE__*/_jsxDEV(AdminLoginModal, {\n      onClose: () => setShowAdminLoginModal(false),\n      onLogin: handleAdminLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this), showLeaderLoginModal && /*#__PURE__*/_jsxDEV(LeaderLoginModal, {\n      onClose: () => setShowLeaderLoginModal(false),\n      onLogin: handleLeaderLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ojOGxyAZez6vQ8id87C0heW9kBw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LayoutHeader","GroupView","PersonView","AddEditGroupModal","AddEditPersonModal","GroupDetailView","MeetingsView","AddMeetingModal","MeetingDetailView","PersonDashboardView","RegisterAttendanceView","DeletedPeopleHistoryView","AdminView","AdminLoginModal","HamburgerMenu","LeaderLoginModal","leaderLogin","leaderLogout","isLeaderLoggedIn","getLeaderData","getGroups","getPersons","getMeetings","createGroup","createPerson","createMeeting","updateGroup","updatePerson","updateMeeting","deleteGroup","deletePerson","deleteMeeting","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentPage","setCurrentPage","selectedGroup","setSelectedGroup","selectedMeeting","setSelectedMeeting","selectedPerson","setSelectedPerson","showGroupModal","setShowGroupModal","groupToEdit","setGroupToEdit","showPersonModal","setShowPersonModal","personToEdit","setPersonToEdit","showAddMeetingModal","setShowAddMeetingModal","showAdminLoginModal","setShowAdminLoginModal","isAdminAuthenticated","setIsAdminAuthenticated","isMenuOpen","setIsMenuOpen","showLeaderLoginModal","setShowLeaderLoginModal","currentLeader","setCurrentLeader","isLeaderAuthenticated","setIsLeaderAuthenticated","people","setPeople","meetings","setMeetings","groups","setGroups","deletedPeople","setDeletedPeople","leaderData","fetchData","peopleData","meetingsData","groupsData","Promise","all","handleSelectGroup","group","handleSelectPerson","person","handleSelectMeeting","meeting","handleBack","handleSavePerson","personData","_id","updated","map","p","created","handleDeletePerson","personId","filter","handleSaveGroup","groupData","g","handleDeleteGroup","groupId","handleAddMeeting","meetingData","handleDeleteMeeting","meetingId","m","handleEditPerson","handlePersonStatusChange","newStatus","status","handleMeetingAttendanceChange","excuse","updatedAttendance","attendance","att","some","push","handleUpdateMeetingAttendance","newAttendanceRecords","handleClearAllData","window","confirm","localStorage","removeItem","alert","location","reload","handleAdminLogin","username","password","handleLeaderLogin","email","response","leader","error","handleLeaderLogout","getTitle","name","showBackButton","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSelectGroup","onAddGroup","onAddPerson","onSelectPerson","onEditPerson","onDeletePerson","onSelectMeeting","onAddMeeting","onDeleteMeeting","onUpdateMeetingAttendance","onBack","onStatusChange","title","showBack","onMenuToggle","onLeaderLogout","isOpen","onClose","onNavigate","onSave","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/afcru/Downloads/project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LayoutHeader from './components/LayoutHeader';\nimport GroupView from './components/GroupView';\nimport PersonView from './components/PersonView';\nimport AddEditGroupModal from './components/AddEditGroupModal';\nimport AddEditPersonModal from './components/AddEditPersonModal';\nimport GroupDetailView from './components/GroupDetailView';\nimport MeetingsView from './components/MeetingsView';\nimport AddMeetingModal from './components/AddMeetingModal';\nimport MeetingDetailView from './components/MeetingDetailView';\nimport PersonDashboardView from './components/PersonDashboardView';\nimport RegisterAttendanceView from './components/RegisterAttendanceView';\nimport DeletedPeopleHistoryView from './components/DeletedPeopleHistoryView';\nimport AdminView from './components/AdminView';\nimport AdminLoginModal from './components/AdminLoginModal';\nimport HamburgerMenu from './components/HamburgerMenu';\nimport LeaderLoginModal from './components/LeaderLoginModal';\nimport {\n  leaderLogin,\n  leaderLogout,\n  isLeaderLoggedIn,\n  getLeaderData,\n  getGroups,\n  getPersons,\n  getMeetings,\n  createGroup,\n  createPerson,\n  createMeeting,\n  updateGroup,\n  updatePerson,\n  updateMeeting,\n  deleteGroup,\n  deletePerson,\n  deleteMeeting,\n} from './utils/api';\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('groups');\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [selectedMeeting, setSelectedMeeting] = useState(null);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [showGroupModal, setShowGroupModal] = useState(false);\n  const [groupToEdit, setGroupToEdit] = useState(null);\n  const [showPersonModal, setShowPersonModal] = useState(false);\n  const [personToEdit, setPersonToEdit] = useState(null);\n  const [showAddMeetingModal, setShowAddMeetingModal] = useState(false);\n  const [showAdminLoginModal, setShowAdminLoginModal] = useState(false);\n  const [isAdminAuthenticated, setIsAdminAuthenticated] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [showLeaderLoginModal, setShowLeaderLoginModal] = useState(false);\n  const [currentLeader, setCurrentLeader] = useState(null);\n  const [isLeaderAuthenticated, setIsLeaderAuthenticated] = useState(false);\n\n  // Datos principales\n  const [people, setPeople] = useState([]);\n  const [meetings, setMeetings] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [deletedPeople, setDeletedPeople] = useState([]); // Se puede guardar en backend o mantener local\n\n  // Verificar autenticación al cargar\n  useEffect(() => {\n    if (isLeaderLoggedIn()) {\n      const leaderData = getLeaderData();\n      setCurrentLeader(leaderData);\n      setIsLeaderAuthenticated(true);\n    }\n  }, []);\n\n  // Cargar datos al iniciar\n  useEffect(() => {\n    async function fetchData() {\n      const [peopleData, meetingsData, groupsData] = await Promise.all([\n        getPersons(),\n        getMeetings(),\n        getGroups(),\n      ]);\n      setPeople(peopleData);\n      setMeetings(meetingsData);\n      setGroups(groupsData);\n    }\n    fetchData();\n  }, []);\n\n  const handleSelectGroup = (group) => {\n    setSelectedGroup(group);\n    setCurrentPage('groupDetail');\n  };\n\n  const handleSelectPerson = (person) => {\n    setSelectedPerson(person);\n    setCurrentPage('personDashboard');\n  };\n\n  const handleSelectMeeting = (meeting) => {\n    setSelectedMeeting(meeting);\n    setCurrentPage('meetingDetail');\n  };\n\n  const handleBack = () => {\n    if (currentPage === 'groupDetail') {\n      setCurrentPage('groups');\n      setSelectedGroup(null);\n    } else if (currentPage === 'meetingDetail') {\n      setCurrentPage('meetings');\n      setSelectedMeeting(null);\n    } else if (currentPage === 'personDashboard') {\n      setCurrentPage('people');\n      setSelectedPerson(null);\n    } else if (currentPage === 'registerAttendance') {\n      setCurrentPage('meetings');\n    } else if (currentPage === 'deletedHistory') {\n      setCurrentPage('people');\n    } else if (currentPage === 'admin') {\n      setCurrentPage('groups');\n      setIsAdminAuthenticated(false);\n    } else if (currentPage === 'adminLogin') {\n      setCurrentPage('groups');\n      setShowAdminLoginModal(false);\n    }\n  };\n\n  // CRUD Personas\n  const handleSavePerson = async (personData) => {\n    if (personData._id) {\n      const updated = await updatePerson(personData._id, personData);\n      setPeople(people.map(p => p._id === updated._id ? updated : p));\n    } else {\n      const created = await createPerson(personData);\n      setPeople([...people, created]);\n    }\n  };\n  const handleDeletePerson = async (personId) => {\n    await deletePerson(personId);\n    setPeople(people.filter(p => p._id !== personId));\n  };\n\n  // CRUD Grupos\n  const handleSaveGroup = async (groupData) => {\n    if (groupData._id) {\n      const updated = await updateGroup(groupData._id, groupData);\n      setGroups(groups.map(g => g._id === updated._id ? updated : g));\n    } else {\n      const created = await createGroup(groupData);\n      setGroups([...groups, created]);\n    }\n  };\n  const handleDeleteGroup = async (groupId) => {\n    await deleteGroup(groupId);\n    setGroups(groups.filter(g => g._id !== groupId));\n  };\n\n  // CRUD Reuniones\n  const handleAddMeeting = async (meetingData) => {\n    const created = await createMeeting(meetingData);\n    setMeetings([...meetings, created]);\n  };\n  const handleDeleteMeeting = async (meetingId) => {\n    await deleteMeeting(meetingId);\n    setMeetings(meetings.filter(m => m._id !== meetingId));\n  };\n\n  // CRUD Asistencias (puedes expandir según tu lógica)\n  // ...\n\n  const handleEditPerson = (person) => {\n    setPersonToEdit(person);\n    setShowPersonModal(true);\n  };\n\n  const handlePersonStatusChange = (personId, newStatus) => {\n    setPeople(people.map(p =>\n      p._id === personId ? { ...p, status: newStatus } : p\n    ));\n  };\n\n  const handleMeetingAttendanceChange = (meetingId, personId, newStatus, excuse = '') => {\n    setMeetings(meetings.map(meeting => {\n      if (meeting._id === meetingId) {\n        const updatedAttendance = meeting.attendance.map(att =>\n          att.personId === personId ? { ...att, status: newStatus, excuse: newStatus === 'Excusa' ? excuse : '' } : att\n        );\n        if (!updatedAttendance.some(att => att.personId === personId)) {\n          updatedAttendance.push({ personId: personId, status: newStatus, excuse: newStatus === 'Excusa' ? excuse : '' });\n        }\n        return { ...meeting, attendance: updatedAttendance };\n      }\n      return meeting;\n    }));\n  };\n\n  const handleUpdateMeetingAttendance = (meetingId, newAttendanceRecords) => {\n    setMeetings(meetings.map(meeting => {\n      if (meeting._id === meetingId) {\n        return { ...meeting, attendance: newAttendanceRecords };\n      }\n      return meeting;\n    }));\n  };\n\n  const handleClearAllData = () => {\n    if (window.confirm('¡Cuidado! ¿Estás seguro de que quieres borrar TODOS los datos (personas, reuniones, historial)? Esta acción es irreversible.')) {\n      setPeople([]);\n      setMeetings([]);\n      setDeletedPeople([]);\n      localStorage.removeItem('attendancePeople');\n      localStorage.removeItem('attendanceMeetings');\n      localStorage.removeItem('deletedPeopleHistory');\n      alert('¡Todos los datos han sido borrados! La aplicación se reiniciará.');\n      window.location.reload();\n    }\n  };\n\n  const handleAdminLogin = (username, password) => {\n    if (username === 'andresc' && password === 'andresc') {\n      setIsAdminAuthenticated(true);\n      setCurrentPage('admin');\n      return true;\n    }\n    return false;\n  };\n\n  // Autenticación de líder\n  const handleLeaderLogin = async (email, password) => {\n    try {\n      const response = await leaderLogin(email, password);\n      setCurrentLeader(response.leader);\n      setIsLeaderAuthenticated(true);\n      setShowLeaderLoginModal(false);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const handleLeaderLogout = () => {\n    leaderLogout();\n    setCurrentLeader(null);\n    setIsLeaderAuthenticated(false);\n    setCurrentPage('groups');\n  };\n\n  const getTitle = () => {\n    if (currentPage === 'groups') return 'Grupos';\n    if (currentPage === 'people') return 'Personas';\n    if (currentPage === 'meetings') return 'Reuniones';\n    if (currentPage === 'groupDetail') return selectedGroup?.name || 'Detalle del Grupo';\n    if (currentPage === 'personDashboard') return selectedPerson?.name || 'Dashboard de Persona';\n    if (currentPage === 'meetingDetail') return selectedMeeting?.name || 'Detalle de Reunión';\n    if (currentPage === 'registerAttendance') return 'Registrar Asistencia';\n    if (currentPage === 'deletedHistory') return 'Historial de Eliminados';\n    if (currentPage === 'admin') return 'Panel de Administración';\n    return 'Asistencias';\n  };\n\n  const showBackButton = currentPage !== 'groups' && currentPage !== 'people' && currentPage !== 'meetings' && currentPage !== 'registerAttendance' && currentPage !== 'deletedHistory' && currentPage !== 'admin' && currentPage !== 'adminLogin';\n\n  const renderContent = () => {\n    if (!isLeaderAuthenticated) {\n      return (\n        <div className=\"flex-1 flex items-center justify-center bg-gray-50\">\n          <div className=\"text-center\">\n            <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">Sistema de Asistencias</h1>\n            <p className=\"text-gray-600 mb-8\">Inicia sesión como líder para continuar</p>\n            <button\n              onClick={() => setShowLeaderLoginModal(true)}\n              className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Iniciar Sesión\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    // Mostrar todas las vistas y botones para líderes\n    return (\n      <>\n        {currentPage === 'groups' && (\n          <GroupView\n            groups={groups}\n            onSelectGroup={handleSelectGroup}\n            onAddGroup={() => setShowGroupModal(true)}\n          />\n        )}\n        {currentPage === 'people' && (\n          <PersonView\n            people={people}\n            onAddPerson={() => setShowPersonModal(true)}\n            onSelectPerson={handleSelectPerson}\n            onEditPerson={handleEditPerson}\n            onDeletePerson={handleDeletePerson}\n          />\n        )}\n        {currentPage === 'meetings' && (\n          <MeetingsView\n            meetings={meetings}\n            onSelectMeeting={handleSelectMeeting}\n            onAddMeeting={() => setShowAddMeetingModal(true)}\n            onDeleteMeeting={handleDeleteMeeting}\n          />\n        )}\n        {currentPage === 'registerAttendance' && (\n          <RegisterAttendanceView\n            meetings={meetings}\n            people={people}\n            onUpdateMeetingAttendance={handleUpdateMeetingAttendance}\n            onBack={handleBack}\n            groups={groups}\n          />\n        )}\n        {currentPage === 'deletedHistory' && (\n          <DeletedPeopleHistoryView\n            deletedPeople={deletedPeople}\n            groups={groups}\n          />\n        )}\n        {currentPage === 'groupDetail' && selectedGroup && (\n          <GroupDetailView\n            group={selectedGroup}\n            people={people}\n            meetings={meetings}\n            onStatusChange={handlePersonStatusChange}\n            onAddPerson={() => setShowPersonModal(true)}\n            onSelectPerson={handleSelectPerson}\n            onEditPerson={handleEditPerson}\n            onDeletePerson={handleDeletePerson}\n          />\n        )}\n        {currentPage === 'personDashboard' && selectedPerson && (\n          <PersonDashboardView\n            person={selectedPerson}\n            meetings={meetings}\n            groups={groups}\n          />\n        )}\n        {currentPage === 'meetingDetail' && selectedMeeting && (\n          <MeetingDetailView\n            meeting={selectedMeeting}\n            people={people}\n            groups={groups}\n            onStatusChange={handleMeetingAttendanceChange}\n            onEditPerson={handleEditPerson}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {isLeaderAuthenticated && (\n        <LayoutHeader\n          title={getTitle()}\n          onBack={handleBack}\n          showBack={currentPage !== 'groups' && currentPage !== 'people' && currentPage !== 'meetings'}\n          onMenuToggle={() => setIsMenuOpen(!isMenuOpen)}\n          currentLeader={currentLeader}\n          onLeaderLogout={handleLeaderLogout}\n        />\n      )}\n\n      <div className=\"flex\">\n        {isLeaderAuthenticated && (\n          <HamburgerMenu\n            isOpen={isMenuOpen}\n            onClose={() => setIsMenuOpen(false)}\n            onNavigate={setCurrentPage}\n            currentPage={currentPage}\n            isLeaderAuthenticated={isLeaderAuthenticated}\n          />\n        )}\n\n        <main className=\"flex-1 p-6\">\n          {renderContent()}\n        </main>\n      </div>\n\n      {/* Modals */}\n      {showGroupModal && (\n        <AddEditGroupModal\n          onClose={() => setShowGroupModal(false)}\n          onSave={handleSaveGroup}\n          groupToEdit={groupToEdit}\n        />\n      )}\n\n      {showPersonModal && (\n        <AddEditPersonModal\n          onClose={() => setShowPersonModal(false)}\n          onSave={handleSavePerson}\n          personToEdit={personToEdit}\n          groups={groups}\n        />\n      )}\n\n      {showAddMeetingModal && (\n        <AddMeetingModal\n          onClose={() => setShowAddMeetingModal(false)}\n          onSave={handleAddMeeting}\n          groups={groups}\n        />\n      )}\n\n      {showAdminLoginModal && (\n        <AdminLoginModal\n          onClose={() => setShowAdminLoginModal(false)}\n          onLogin={handleAdminLogin}\n        />\n      )}\n\n      {showLeaderLoginModal && (\n        <LeaderLoginModal\n          onClose={() => setShowLeaderLoginModal(false)}\n          onLogin={handleLeaderLogin}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}