{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BackendConnectionTest=()=>{const[connectionStatus,setConnectionStatus]=useState('Probando conexi√≥n...');const[backendData,setBackendData]=useState(null);const[serverInfo,setServerInfo]=useState({});const[testResults,setTestResults]=useState([]);useEffect(()=>{testBackendConnection();},[]);const addTestResult=function(test,status){let details=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';setTestResults(prev=>[...prev,{test,status,details,timestamp:new Date().toLocaleTimeString()}]);};const testBackendConnection=async()=>{setTestResults([]);setConnectionStatus('Probando conexi√≥n...');setBackendData(null);setServerInfo({});// Lista de URLs a probar\nconst testUrls=[{name:'Localhost',url:'http://localhost:4000/'},{name:'Servidor Remoto',url:'https://cluster0.4yyngfr.mongodb.net/'},{name:'API Local',url:'http://localhost:4000/api/persons'},{name:'API Remota',url:'https://cluster0.4yyngfr.mongodb.net/api/persons'}];for(const test of testUrls){try{console.log(`Probando: ${test.name} - ${test.url}`);const startTime=Date.now();const response=await fetch(test.url,{method:'GET',headers:{'Content-Type':'application/json'},// Timeout de 5 segundos\nsignal:AbortSignal.timeout(5000)});const endTime=Date.now();const responseTime=endTime-startTime;if(response.ok){const data=await response.text();addTestResult(test.name,'‚úÖ',`Respuesta en ${responseTime}ms`);if(test.name==='Localhost'||test.name==='Servidor Remoto'){setConnectionStatus(`‚úÖ Conexi√≥n exitosa con ${test.name}`);setBackendData(data);setServerInfo({url:test.url,responseTime,status:response.status,headers:Object.fromEntries(response.headers.entries())});}}else{addTestResult(test.name,'‚ùå',`HTTP ${response.status}: ${response.statusText}`);}}catch(error){const errorMessage=error.name==='AbortError'?'Timeout (5s)':error.message;addTestResult(test.name,'‚ùå',errorMessage);console.error(`Error en ${test.name}:`,error);}}// Si no hay conexiones exitosas\nif(!testResults.some(r=>r.status==='‚úÖ')){setConnectionStatus('‚ùå No se pudo conectar a ning√∫n servidor');}};const testSpecificEndpoint=async url=>{try{const response=await fetch(url);if(response.ok){const data=await response.json();alert(`‚úÖ Endpoint funcionando\\nURL: ${url}\\nRespuesta: ${JSON.stringify(data,null,2)}`);}else{alert(`‚ùå Error en endpoint\\nURL: ${url}\\nStatus: ${response.status}`);}}catch(error){alert(`‚ùå Error al probar endpoint\\nURL: ${url}\\nError: ${error.message}`);}};const pingServer=async url=>{try{const startTime=Date.now();const response=await fetch(url,{method:'HEAD'});const endTime=Date.now();const pingTime=endTime-startTime;alert(`üèì Ping a ${url}\\nTiempo: ${pingTime}ms\\nStatus: ${response.status}`);}catch(error){alert(`‚ùå Error en ping a ${url}\\nError: ${error.message}`);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 max-w-4xl mx-auto bg-white rounded-xl shadow-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-6\",children:\"Prueba de Conexi\\xF3n Backend\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-700 mb-2\",children:\"Estado general:\"}),/*#__PURE__*/_jsx(\"p\",{className:`text-lg font-semibold ${connectionStatus.includes('‚úÖ')?'text-green-600':'text-red-600'}`,children:connectionStatus})]}),backendData&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-700 mb-2\",children:\"Respuesta del servidor:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 bg-gray-100 p-3 rounded border\",children:/*#__PURE__*/_jsx(\"pre\",{className:\"whitespace-pre-wrap\",children:backendData})})]}),Object.keys(serverInfo).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-700 mb-2\",children:\"Informaci\\xF3n del servidor:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600 bg-blue-50 p-3 rounded border\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"URL:\"}),\" \",serverInfo.url]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tiempo de respuesta:\"}),\" \",serverInfo.responseTime,\"ms\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",serverInfo.status]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-3\",children:\"Resultados de Pruebas\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:testResults.map((result,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-gray-50 rounded border\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:result.status}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:result.test})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(\"span\",{children:result.details}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-xs text-gray-400\",children:[\"(\",result.timestamp,\")\"]})]})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:testBackendConnection,className:\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded\",children:\"\\uD83D\\uDD04 Probar Todas las Conexiones\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>testSpecificEndpoint('http://localhost:4000/api/persons'),className:\"bg-green-500 hover:bg-green-700 text-white font-bold py-3 px-4 rounded\",children:\"\\uD83E\\uDDEA Probar API Local\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>pingServer('http://localhost:4000'),className:\"bg-purple-500 hover:bg-purple-700 text-white font-bold py-3 px-4 rounded\",children:\"\\uD83C\\uDFD3 Ping Localhost\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>pingServer('https://tu-servidor-remoto.com'),className:\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-3 px-4 rounded\",children:\"\\uD83C\\uDFD3 Ping Servidor Remoto\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-yellow-800 mb-2\",children:\"\\uD83D\\uDCCB Configuraci\\xF3n Necesaria\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-yellow-700 space-y-1\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Backend:\"}),\" Necesitas configurar las credenciales de MongoDB Atlas\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Frontend:\"}),\" Actualizar la URL del API en \",/*#__PURE__*/_jsx(\"code\",{children:\"src/utils/api.js\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Variables de entorno:\"}),\" Crear archivo \",/*#__PURE__*/_jsx(\"code\",{children:\".env\"}),\" en el backend\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"IP Whitelist:\"}),\" Agregar tu IP a MongoDB Atlas\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"URLs esperadas:\"})}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Backend local: http://localhost:4000\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Backend remoto: https://tu-servidor-remoto.com\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 API local: http://localhost:4000/api\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 API remota: https://tu-servidor-remoto.com/api\"})]})]});};export default BackendConnectionTest;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","BackendConnectionTest","connectionStatus","setConnectionStatus","backendData","setBackendData","serverInfo","setServerInfo","testResults","setTestResults","testBackendConnection","addTestResult","test","status","details","arguments","length","undefined","prev","timestamp","Date","toLocaleTimeString","testUrls","name","url","console","log","startTime","now","response","fetch","method","headers","signal","AbortSignal","timeout","endTime","responseTime","ok","data","text","Object","fromEntries","entries","statusText","error","errorMessage","message","some","r","testSpecificEndpoint","json","alert","JSON","stringify","pingServer","pingTime","className","children","includes","keys","map","result","index","onClick"],"sources":["c:/Users/afcru/Downloads/project/src/components/BackendConnectionTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst BackendConnectionTest = () => {\n  const [connectionStatus, setConnectionStatus] = useState('Probando conexi√≥n...');\n  const [backendData, setBackendData] = useState(null);\n  const [serverInfo, setServerInfo] = useState({});\n  const [testResults, setTestResults] = useState([]);\n\n  useEffect(() => {\n    testBackendConnection();\n  }, []);\n\n  const addTestResult = (test, status, details = '') => {\n    setTestResults(prev => [...prev, { test, status, details, timestamp: new Date().toLocaleTimeString() }]);\n  };\n\n  const testBackendConnection = async () => {\n    setTestResults([]);\n    setConnectionStatus('Probando conexi√≥n...');\n    setBackendData(null);\n    setServerInfo({});\n\n    // Lista de URLs a probar\n    const testUrls = [\n      { name: 'Localhost', url: 'http://localhost:4000/' },\n      { name: 'Servidor Remoto', url: 'https://cluster0.4yyngfr.mongodb.net/' },\n      { name: 'API Local', url: 'http://localhost:4000/api/persons' },\n      { name: 'API Remota', url: 'https://cluster0.4yyngfr.mongodb.net/api/persons' }\n    ];\n\n    for (const test of testUrls) {\n      try {\n        console.log(`Probando: ${test.name} - ${test.url}`);\n        const startTime = Date.now();\n        const response = await fetch(test.url, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          // Timeout de 5 segundos\n          signal: AbortSignal.timeout(5000)\n        });\n        const endTime = Date.now();\n        const responseTime = endTime - startTime;\n\n        if (response.ok) {\n          const data = await response.text();\n          addTestResult(test.name, '‚úÖ', `Respuesta en ${responseTime}ms`);\n          \n          if (test.name === 'Localhost' || test.name === 'Servidor Remoto') {\n            setConnectionStatus(`‚úÖ Conexi√≥n exitosa con ${test.name}`);\n            setBackendData(data);\n            setServerInfo({\n              url: test.url,\n              responseTime,\n              status: response.status,\n              headers: Object.fromEntries(response.headers.entries())\n            });\n          }\n        } else {\n          addTestResult(test.name, '‚ùå', `HTTP ${response.status}: ${response.statusText}`);\n        }\n      } catch (error) {\n        const errorMessage = error.name === 'AbortError' ? 'Timeout (5s)' : error.message;\n        addTestResult(test.name, '‚ùå', errorMessage);\n        console.error(`Error en ${test.name}:`, error);\n      }\n    }\n\n    // Si no hay conexiones exitosas\n    if (!testResults.some(r => r.status === '‚úÖ')) {\n      setConnectionStatus('‚ùå No se pudo conectar a ning√∫n servidor');\n    }\n  };\n\n  const testSpecificEndpoint = async (url) => {\n    try {\n      const response = await fetch(url);\n      if (response.ok) {\n        const data = await response.json();\n        alert(`‚úÖ Endpoint funcionando\\nURL: ${url}\\nRespuesta: ${JSON.stringify(data, null, 2)}`);\n      } else {\n        alert(`‚ùå Error en endpoint\\nURL: ${url}\\nStatus: ${response.status}`);\n      }\n    } catch (error) {\n      alert(`‚ùå Error al probar endpoint\\nURL: ${url}\\nError: ${error.message}`);\n    }\n  };\n\n  const pingServer = async (url) => {\n    try {\n      const startTime = Date.now();\n      const response = await fetch(url, { method: 'HEAD' });\n      const endTime = Date.now();\n      const pingTime = endTime - startTime;\n      \n      alert(`üèì Ping a ${url}\\nTiempo: ${pingTime}ms\\nStatus: ${response.status}`);\n    } catch (error) {\n      alert(`‚ùå Error en ping a ${url}\\nError: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto bg-white rounded-xl shadow-md\">\n      <h2 className=\"text-2xl font-bold mb-6\">Prueba de Conexi√≥n Backend</h2>\n      \n      <div className=\"mb-6\">\n        <p className=\"text-sm font-medium text-gray-700 mb-2\">Estado general:</p>\n        <p className={`text-lg font-semibold ${connectionStatus.includes('‚úÖ') ? 'text-green-600' : 'text-red-600'}`}>\n          {connectionStatus}\n        </p>\n      </div>\n\n      {backendData && (\n        <div className=\"mb-6\">\n          <p className=\"text-sm font-medium text-gray-700 mb-2\">Respuesta del servidor:</p>\n          <div className=\"text-sm text-gray-600 bg-gray-100 p-3 rounded border\">\n            <pre className=\"whitespace-pre-wrap\">{backendData}</pre>\n          </div>\n        </div>\n      )}\n\n      {Object.keys(serverInfo).length > 0 && (\n        <div className=\"mb-6\">\n          <p className=\"text-sm font-medium text-gray-700 mb-2\">Informaci√≥n del servidor:</p>\n          <div className=\"text-sm text-gray-600 bg-blue-50 p-3 rounded border\">\n            <p><strong>URL:</strong> {serverInfo.url}</p>\n            <p><strong>Tiempo de respuesta:</strong> {serverInfo.responseTime}ms</p>\n            <p><strong>Status:</strong> {serverInfo.status}</p>\n          </div>\n        </div>\n      )}\n\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold mb-3\">Resultados de Pruebas</h3>\n        <div className=\"space-y-2\">\n          {testResults.map((result, index) => (\n            <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded border\">\n              <div className=\"flex items-center space-x-3\">\n                <span className=\"text-lg\">{result.status}</span>\n                <span className=\"font-medium\">{result.test}</span>\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                <span>{result.details}</span>\n                <span className=\"ml-2 text-xs text-gray-400\">({result.timestamp})</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n        <button\n          onClick={testBackendConnection}\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded\"\n        >\n          üîÑ Probar Todas las Conexiones\n        </button>\n        \n        <button\n          onClick={() => testSpecificEndpoint('http://localhost:4000/api/persons')}\n          className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-3 px-4 rounded\"\n        >\n          üß™ Probar API Local\n        </button>\n\n        <button\n          onClick={() => pingServer('http://localhost:4000')}\n          className=\"bg-purple-500 hover:bg-purple-700 text-white font-bold py-3 px-4 rounded\"\n        >\n          üèì Ping Localhost\n        </button>\n\n        <button\n          onClick={() => pingServer('https://tu-servidor-remoto.com')}\n          className=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-3 px-4 rounded\"\n        >\n          üèì Ping Servidor Remoto\n        </button>\n      </div>\n\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n        <h4 className=\"font-semibold text-yellow-800 mb-2\">üìã Configuraci√≥n Necesaria</h4>\n        <div className=\"text-sm text-yellow-700 space-y-1\">\n          <p>‚Ä¢ <strong>Backend:</strong> Necesitas configurar las credenciales de MongoDB Atlas</p>\n          <p>‚Ä¢ <strong>Frontend:</strong> Actualizar la URL del API en <code>src/utils/api.js</code></p>\n          <p>‚Ä¢ <strong>Variables de entorno:</strong> Crear archivo <code>.env</code> en el backend</p>\n          <p>‚Ä¢ <strong>IP Whitelist:</strong> Agregar tu IP a MongoDB Atlas</p>\n        </div>\n      </div>\n\n      <div className=\"mt-4 text-xs text-gray-500\">\n        <p><strong>URLs esperadas:</strong></p>\n        <p>‚Ä¢ Backend local: http://localhost:4000</p>\n        <p>‚Ä¢ Backend remoto: https://tu-servidor-remoto.com</p>\n        <p>‚Ä¢ API local: http://localhost:4000/api</p>\n        <p>‚Ä¢ API remota: https://tu-servidor-remoto.com/api</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BackendConnectionTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}