{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afcru\\\\Downloads\\\\project\\\\src\\\\components\\\\BackendConnectionTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackendConnectionTest = () => {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState('Probando conexión...');\n  const [backendData, setBackendData] = useState(null);\n  useEffect(() => {\n    testBackendConnection();\n  }, []);\n  const testBackendConnection = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/');\n      if (response.ok) {\n        const data = await response.text();\n        setConnectionStatus('✅ Conexión exitosa con el backend');\n        setBackendData(data);\n      } else {\n        setConnectionStatus('❌ Error en la conexión con el backend');\n      }\n    } catch (error) {\n      setConnectionStatus('❌ No se puede conectar al backend');\n      console.error('Error de conexión:', error);\n    }\n  };\n  const testApiEndpoint = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/api/persons');\n      if (response.ok) {\n        const data = await response.json();\n        alert(`✅ API funcionando. Respuesta: ${JSON.stringify(data, null, 2)}`);\n      } else {\n        alert('❌ Error en el endpoint de la API');\n      }\n    } catch (error) {\n      alert('❌ Error al probar el endpoint de la API');\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-md mx-auto bg-white rounded-xl shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Prueba de Conexi\\xF3n Backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm font-medium text-gray-700\",\n        children: \"Estado de conexi\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-sm ${connectionStatus.includes('✅') ? 'text-green-600' : 'text-red-600'}`,\n        children: connectionStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), backendData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm font-medium text-gray-700\",\n        children: \"Respuesta del backend:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 bg-gray-100 p-2 rounded\",\n        children: backendData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testBackendConnection,\n        className: \"w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        children: \"Probar Conexi\\xF3n Nuevamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testApiEndpoint,\n        className: \"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",\n        children: \"Probar Endpoint API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-xs text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Backend esperado en: http://localhost:4000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"API esperada en: http://localhost:4000/api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(BackendConnectionTest, \"oMtsADRObI1Jq6fry1JI0HIG0ww=\");\n_c = BackendConnectionTest;\nexport default BackendConnectionTest;\nvar _c;\n$RefreshReg$(_c, \"BackendConnectionTest\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BackendConnectionTest","_s","connectionStatus","setConnectionStatus","backendData","setBackendData","testBackendConnection","response","fetch","ok","data","text","error","console","testApiEndpoint","json","alert","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","onClick","_c","$RefreshReg$"],"sources":["C:/Users/afcru/Downloads/project/src/components/BackendConnectionTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst BackendConnectionTest = () => {\r\n  const [connectionStatus, setConnectionStatus] = useState('Probando conexión...');\r\n  const [backendData, setBackendData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    testBackendConnection();\r\n  }, []);\r\n\r\n  const testBackendConnection = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/');\r\n      if (response.ok) {\r\n        const data = await response.text();\r\n        setConnectionStatus('✅ Conexión exitosa con el backend');\r\n        setBackendData(data);\r\n      } else {\r\n        setConnectionStatus('❌ Error en la conexión con el backend');\r\n      }\r\n    } catch (error) {\r\n      setConnectionStatus('❌ No se puede conectar al backend');\r\n      console.error('Error de conexión:', error);\r\n    }\r\n  };\r\n\r\n  const testApiEndpoint = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/persons');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        alert(`✅ API funcionando. Respuesta: ${JSON.stringify(data, null, 2)}`);\r\n      } else {\r\n        alert('❌ Error en el endpoint de la API');\r\n      }\r\n    } catch (error) {\r\n      alert('❌ Error al probar el endpoint de la API');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-md mx-auto bg-white rounded-xl shadow-md\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Prueba de Conexión Backend</h2>\r\n      \r\n      <div className=\"mb-4\">\r\n        <p className=\"text-sm font-medium text-gray-700\">Estado de conexión:</p>\r\n        <p className={`text-sm ${connectionStatus.includes('✅') ? 'text-green-600' : 'text-red-600'}`}>\r\n          {connectionStatus}\r\n        </p>\r\n      </div>\r\n\r\n      {backendData && (\r\n        <div className=\"mb-4\">\r\n          <p className=\"text-sm font-medium text-gray-700\">Respuesta del backend:</p>\r\n          <p className=\"text-sm text-gray-600 bg-gray-100 p-2 rounded\">\r\n            {backendData}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"space-y-2\">\r\n        <button\r\n          onClick={testBackendConnection}\r\n          className=\"w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n        >\r\n          Probar Conexión Nuevamente\r\n        </button>\r\n        \r\n        <button\r\n          onClick={testApiEndpoint}\r\n          className=\"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\r\n        >\r\n          Probar Endpoint API\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"mt-4 text-xs text-gray-500\">\r\n        <p>Backend esperado en: http://localhost:4000</p>\r\n        <p>API esperada en: http://localhost:4000/api</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackendConnectionTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}